name: hs-to-coq

dependencies:
  - base
  - lens
  - template-haskell
  - ghc
  - ghc-boot
  - ghc-paths
  - bifunctors
  # - semigroups
  - transformers
  - mtl
  - array
  # - lens
  - pipes
  - containers
  # - validation
  - syb
  - text
  - directory
  - filepath
  - wl-pprint-text
  - parsec
  - indents
  - optparse-applicative

other-extensions:    TupleSections, LambdaCase, MultiWayIf, RecordWildCards, TypeApplications, OverloadedStrings, RankNTypes, ConstraintKinds, MultiParamTypeClasses, FunctionalDependencies, FlexibleContexts, TypeSynonymInstances, FlexibleInstances, UndecidableInstances, DeriveDataTypeable, StandaloneDeriving, GeneralizedNewtypeDeriving, PatternSynonyms, ViewPatterns, TemplateHaskell, CPP

library:
  source-dirs: src/lib

executable:
    source-dirs: src/exe
    main: Main.hs
    dependencies: hs-to-coq


# -- Initial hs-to-coq.cabal generated by cabal init.  For further
# -- documentation, see http://haskell.org/cabal/users-guide/

# name:                hs-to-coq
# version:             0.0.0.0
# synopsis:            Convert Haskell datatypes/functions to Coq
# homepage:            http://www.deepspec.org/research/Haskell/
# license:             MIT
# license-file:        LICENSE
# author:              Antal Spector-Zabusky
# maintainer:          antal.b.sz@gmail.com
# copyright:           Copyright Â© 2016 Antal Spector-Zabusky, University of Pennsylvania
# category:            Language
# build-type:          Simple
# cabal-version:       >=1.10
# extra-source-files:  src/lib/HsToCoq/ConvertHaskell/Parameters/Parsers.y

# source-repository head
#   type:     git
#   location: https://github.com/antalsz/hs-to-coq

# library
#   exposed-modules:     HsToCoq.Util.GHC
#                      , HsToCoq.Util.GHC.Module
#                      , HsToCoq.Util.GHC.FastString
#                      , HsToCoq.Util.GHC.DynFlags
#                      , HsToCoq.Util.GHC.RdrName
#                      , HsToCoq.Util.GHC.Name
#                      , HsToCoq.Util.GHC.HsTypes
#                      , HsToCoq.Util.GHC.HsExpr
#                      , HsToCoq.Util.GHC.Exception
#                      , HsToCoq.Util.GHC.Monad
#                      , HsToCoq.Util.GHC.Deriving
#                      , HsToCoq.Util.Coerce
#                      , HsToCoq.Util.Function
#                      , HsToCoq.Util.Functor
#                      , HsToCoq.Util.Foldable
#                      , HsToCoq.Util.Traversable
#                      , HsToCoq.Util.Monad.ListT
#                      , HsToCoq.Util.Monad
#                      , HsToCoq.Util.List
#                      , HsToCoq.Util.Containers
#                      , HsToCoq.Util.Char
#                      , HsToCoq.Util.Parsec
#                      , HsToCoq.Util.TempFiles
#                      , HsToCoq.Util.Messages
#                      , Control.Monad.Trans.Variables.Internal
#                      , Control.Monad.Variables.Class.Internal
#                      , Control.Monad.Variables.Internal
#                      , Control.Monad.Trans.Variables
#                      , Control.Monad.Variables.Class
#                      , Control.Monad.Variables
#                      , Control.Monad.DefinedIdents
#                      , Control.Monad.Trans.Parse
#                      , Control.Monad.Trans.NewlinesParse
#                      , Control.Monad.Parse.Class
#                      , Control.Monad.Parse
#                      , HsToCoq.PrettyPrint
#                      , HsToCoq.Coq.Preamble
#                      , HsToCoq.Coq.Gallina
#                      , HsToCoq.Coq.Gallina.Util
#                      , HsToCoq.Coq.Gallina.Orphans
#                      , HsToCoq.Coq.Gallina.Rewrite
#                      , HsToCoq.Coq.Pretty
#                      , HsToCoq.Coq.FreeVars
#                      , HsToCoq.Coq.Subst
#                      , HsToCoq.ConvertHaskell.Parameters.Edits
#                      , HsToCoq.ConvertHaskell.Parameters.Parsers
#                      , HsToCoq.ConvertHaskell.Parameters.Parsers.Lexing
#                      , HsToCoq.ConvertHaskell.Monad
#                      , HsToCoq.ConvertHaskell.InfixNames
#                      , HsToCoq.ConvertHaskell.Variables
#                      , HsToCoq.ConvertHaskell.Definitions
#                      , HsToCoq.ConvertHaskell.Literals
#                      , HsToCoq.ConvertHaskell.Type
#                      , HsToCoq.ConvertHaskell.Expr
#                      , HsToCoq.ConvertHaskell.Pattern
#                      , HsToCoq.ConvertHaskell.Sigs
#                      , HsToCoq.ConvertHaskell.Declarations.Notations
#                      , HsToCoq.ConvertHaskell.Declarations.TypeSynonym
#                      , HsToCoq.ConvertHaskell.Declarations.DataType
#                      , HsToCoq.ConvertHaskell.Declarations.Class
#                      , HsToCoq.ConvertHaskell.Declarations.Instances
#                      , HsToCoq.ConvertHaskell.Declarations.TyCl
#                      , HsToCoq.ConvertHaskell.Declarations.Value
#                      , HsToCoq.ConvertHaskell.Module
#                      , HsToCoq.ConvertHaskell.Axiomatize
#                      , HsToCoq.ConvertHaskell
#                      , HsToCoq.ProcessFiles
#                      , HsToCoq.CLI.FileTree
#                      , HsToCoq.CLI.FileTree.Parser
#                      , HsToCoq.CLI

#   build-tools:         happy == 1.19.*

#   other-extensions:    TupleSections, LambdaCase, MultiWayIf, RecordWildCards, TypeApplications, OverloadedStrings
#                      , RankNTypes, ConstraintKinds
#                      , MultiParamTypeClasses, FunctionalDependencies, FlexibleContexts
#                      , TypeSynonymInstances, FlexibleInstances, UndecidableInstances
#                      , DeriveDataTypeable, StandaloneDeriving, GeneralizedNewtypeDeriving
#                      , PatternSynonyms, ViewPatterns
#                      , TemplateHaskell
#                      , CPP

#   build-depends:       base                 ==4.9.*
#                      , template-haskell     ==2.11.*
#                      , ghc                  ==8.0.*
#                      , ghc-boot             ==8.0.*
#                      , ghc-paths            ==0.1.*
#                      , bifunctors           ==5.*
#                      , semigroups           ==0.18.*
#                      , transformers         ==0.5.*
#                      , mtl                  ==2.2.*
#                      , array                ==0.5.*
#                      , lens                 ==4.15.*
#                      , pipes                ==4.3.*
#                      , containers           ==0.5.*
#                      , validation           ==0.5.*
#                      , syb                  ==0.6.*
#                      , text                 ==1.2.*
#                      , directory            ==1.2.* || ==1.3.*
#                      , filepath             ==1.4.*
#                      , wl-pprint-text       ==1.1.*
#                      , parsec               ==3.1.*
#                      , indents              ==0.4.*
#                      , optparse-applicative ==0.13.*

#   hs-source-dirs:      src/lib
#   default-language:    Haskell2010
#   ghc-options:         -Wall -fno-warn-name-shadowing

# executable hs-to-coq
#   main-is:             Main.hs
#   build-depends:       base == 4.9.*, hs-to-coq
#   hs-source-dirs:      src/exe
#   default-language:    Haskell2010
#   ghc-options:         -Wall -fno-warn-name-shadowing
